# CI & Deploy for a static site hosted on GitHub Pages
# Behavior:
# - On pull_request -> run checks only (no deploy)
# - On push to main -> run checks, then deploy to GitHub Pages

name: CI & Deploy (GitHub Pages)

on:
  pull_request:
    branches: [ main ]                 # Run checks for PRs targeting main
  push:
    branches: [ main ]                 # Deploy when code lands on main

permissions:
  contents: read                       # Needed to checkout code
  pages: write                         # Needed to publish to Pages
  id-token: write                      # Needed by deploy-pages for OIDC

# Ensure only one Pages deployment at a time
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  test:
    name: Checks (HTML / Links / Lighthouse)
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout repository
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Node is required for CLI tools below
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3) HTML lint. If no .htmlhintrc exists, do not fail the build yet.
      - name: HTMLHint (basic syntax)
        run: |
          npx --yes htmlhint "**/*.html" || \
          (echo "HTMLHint found issues or no config; treating as warning."; exit 0)

      # 4) Broken-link check with lychee.
      #    IMPORTANT: --timeout must be a plain integer (seconds), not "20s".
      - name: Broken links (lychee)
        uses: lycheeverse/lychee-action@v1
        with:
          args: >
            --no-progress
            --verbose
            --exclude-mail
            --timeout 20
            .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 5) Lighthouse audit against static files (performance/accessibility/SEO).
      #    The action expects a *file path* in configPath; we provide lighthouserc.json.
      - name: Lighthouse CI (static via config file)
        uses: treosh/lighthouse-ci-action@v11
        with:
          configPath: ./lighthouserc.json

  build:
    # Only run build/upload when pushing to main AND after tests passed
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    name: Upload static artifact

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If you have a frontend build (Vite/React/etc.), run it here and set path to ./dist
      # - run: npm ci && npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Pure static site: upload the repo root as the site artifact.
      # If you build to ./dist, change "path: ." to "path: dist".
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  deploy:
    # Publish to GitHub Pages after the artifact is prepared
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
